{"mappings":"sOAAA,SAASA,IACQC,SAASC,eAAe,YAChCC,UAAUC,OAAO,SAC1B,CAEA,SAASC,IACQJ,SAASC,eAAe,YAChCC,UAAUG,IAAI,SACvB,C,qUCRA,IAAAC,EAAAC,EAAA,S,GCAAD,EAAAC,EAAA,S,sCAOA,MAAMC,EAAkBR,SAASS,cAAc,sBAsC/C,SAASC,EAAcC,GAGrB,GAFAH,EAAgBI,UAAY,GAEL,IAAnBD,EAAQE,OAGV,OAgDFC,EAAAC,GAASC,OAAOC,QACd,iFAlDAC,IAIFP,EAAQQ,SAAQC,IACd,MAAMC,EAKV,SAAyBD,GACvB,MAAMC,EAAYrB,SAASsB,cAAc,OACzCD,EAAUnB,UAAUG,IAAI,eAExB,MAAMkB,EAAYvB,SAASsB,cAAc,KACzCC,EAAUC,KAAO,IAEjB,MAAMC,EAAczB,SAASsB,cAAc,OAC3CG,EAAYvB,UAAUG,IAAI,iBAC1BoB,EAAYC,IAAM,IAAG,EAAAC,EAAAC,eAAcR,KACnCG,EAAUM,YAAYJ,GAEtB,MAAMK,EAAkB9B,SAASsB,cAAc,MAC/CQ,EAAgB5B,UAAUG,IAAI,sBAE9B,MAAM0B,EAAa/B,SAASsB,cAAc,MAC1CS,EAAW7B,UAAUG,IAAI,gBACzB0B,EAAWC,YAAcZ,EAAMa,eAC/BH,EAAgBD,YAAYE,GAE5B,MAAMG,EAAalC,SAASsB,cAAc,MAe1C,OAdAY,EAAWhC,UAAUG,IAAI,gBACzB6B,EAAWF,YAAc,GAAGZ,EAAMe,YAAYf,EAAMgB,aAAaC,MAAM,EAAG,KAC1EP,EAAgBD,YAAYK,GAE5Bb,EAAUQ,YAAYN,GACtBF,EAAUQ,YAAYC,GAEtBL,EAAYa,iBAAiB,SAASC,IACpCA,EAAEC,iBACexC,SAASS,cAAc,aAC/BP,UAAUC,OAAO,cAC1B,EAAAsC,EAAAC,WAAUtB,EAAA,IAGLC,CACT,CAzCsBsB,CAAgBvB,GAClCZ,EAAgBqB,YAAYR,EAAA,GAEhC,CA8CAuB,eAAe1B,IAGb2B,EADoB,0EADLvC,EAAAwC,UAGjB,CApGA9C,SAASsC,iBAAiB,oBAAoB,KAC5C,MAAMS,EAAO/C,SAASS,cAAc,iBAC9BuC,EAAQhD,SAASS,cAAc,gBAE/BwC,EAAejD,SAASS,cAAc,iBAK5C,SAASyC,EAAiBC,GACxBA,EAAMX,iBACN,MAAMY,EAAaJ,EAAMK,MAAMC,OACZ,KAAfF,GACFrD,IAUN6C,eAA4BQ,GAC1B,MACMG,EAAM,qDADGjD,EAAAwC,iBACkEU,mBAC/EJ,KAEFK,EAAe,SAGT,IAAIC,SAAQC,GAAWC,WAAWD,EAAS,OAEjDd,EAAiBU,GACjBnD,GACF,CArBMyD,CAAaT,KAEb5C,EAAgBI,UAAY,GAC5B6C,EAAe,GACfvC,IAEJ,CAdA6B,EAAKT,iBAAiB,SAAUY,GAChCD,EAAaX,iBAAiB,QAASY,EAavC,IAkFFhC,IC9GAZ,EAAAC,EAAA,SAEAqC,eAAekB,EAAUC,GACvB,IACE,MAAMC,QAAiBC,MACrB,sCAAsCF,aAAmBzD,EAAAwC,0BAErD1B,QAAc4C,EAASE,OAE7B,OADe9C,EAAMe,OAAOgC,KAAIC,GAASA,EAAMC,OAAMC,KAAK,KAK5D,CAHE,MAAOC,GAEP,OADAC,QAAQD,MAAMA,GACP,EACT,CACF,CCVA,IAAIE,EAAc,EAGlB,SAASC,EAAuBC,EAAMC,EAAYC,GAChD,MAAMC,EAAS9E,SAASsB,cAAc,UAUtC,OATAwD,EAAO9C,YAAc2C,EACrBG,EAAOC,SAAWH,EAClBE,EAAOxC,iBAAiB,SAAS,KAC/B0C,OAAOC,SAAS,CAAEC,IAAK,EAAGC,KAAM,EAAGC,SAAU,UAAS,IAEpDP,GACFC,EAAO5E,UAAUG,IAAI,8BAEvByE,EAAO5E,UAAUG,IAAI,qBACdyE,CACT,CAEAlC,eAAeC,EAAiBU,GAC9B,IACExD,IACA,MAAMiE,QAAiBC,MAAM,GAAGV,UAAYkB,KACtCY,QAAarB,EAASE,OACtBoB,EAAaC,KAAKC,KAAKH,EAAKI,YArBjB,IAsBXC,EAAgBL,EAAK1E,QAAQwD,KAAI/C,GAAS0C,EAAU1C,EAAMuE,MAC1DxD,QAAeuB,QAAQkC,IAAIF,GAEjCL,EAAK1E,QAAQQ,SAAQ,CAACC,EAAOyE,KAC3BzE,EAAMe,OAASA,EAAO0D,EAAM,IAG9BnF,EAAc2E,EAAK1E,SAQvB,SAA0B2E,EAAY/B,GACpC,MAAMuC,EAAsB9F,SAASS,cAAc,yBACnDqF,EAAoBlF,UAAY,GAEhC,MAAMmF,EAAiBrB,EAAuB,IAAqB,IAAhBD,GAAmB,GAQtE,GAPAsB,EAAezD,iBAAiB,SAASM,UACvC6B,UACM5B,EAAiBU,EAAA,IAEzBwC,EAAe7F,UAAUG,IAAI,+BAC7ByF,EAAoBjE,YAAYkE,GAE5BT,GAAc,EAChB,IAAK,IAAIU,EAAI,EAAGA,GAAKV,EAAYU,IAAK,CACpC,MAAMC,EAAavB,EAAuBsB,EAAEE,WAAYF,IAAMvB,EAAauB,IAAMvB,GACjFwB,EAAW3D,iBAAiB,SAASM,UACnC6B,EAAcuB,QACRnD,EAAiBU,EAAA,IAEzBuC,EAAoBjE,YAAYoE,EAClC,KACK,CACL,GAAIjB,OAAOmB,OAAOC,OAAS,IAAK,CAC9B,MAAMC,EAAkB3B,EAAuB,IAAqB,IAAhBD,EAAmC,IAAhBA,GACvE4B,EAAgB/D,iBAAiB,SAASM,UACxC6B,EAAc,QACR5B,EAAiBU,EAAA,IAEzBuC,EAAoBjE,YAAYwE,EAClC,CACA,IAAIC,EAAYf,KAAKgB,IAAI,EAAG9B,EAAc,GACtC+B,EAAUjB,KAAKkB,IAAInB,EAAa,EAAGb,EAAc,GACjDO,OAAOmB,OAAOC,MAAQ,MACxBE,EAAYf,KAAKgB,IAAI,EAAG9B,EAAc,GACtC+B,EAAUjB,KAAKkB,IAAInB,EAAYb,EAAc,IAE3CA,GAAe,EACjB+B,EAAU,EACD/B,GAAea,EAAa,IACrCgB,EAAYhB,EAAa,GAGvBN,OAAOmB,OAAOC,OAAS,KAAOE,EAAY,GAC5CR,EAAoBjE,YAAY6C,EAAuB,OAAO,IAGhE,IAAK,IAAIsB,EAAIM,EAAWN,GAAKQ,EAASR,IAAK,CACzC,MAAMC,EAAavB,EAAuBsB,EAAEE,WAAYF,IAAMvB,EAAauB,IAAMvB,GACjFwB,EAAW3D,iBAAiB,SAASM,UACnC6B,EAAcuB,QACRnD,EAAiBU,EAAA,IAEzBuC,EAAoBjE,YAAYoE,EAClC,CACA,GAAIjB,OAAOmB,OAAOC,OAAS,IAAK,CAC1BI,EAAUlB,EAAa,GACzBQ,EAAoBjE,YAAY6C,EAAuB,OAAO,IAGhE,MAAMgC,EAAiBhC,EACrBY,EAAWY,WACXzB,IAAgBa,EAChBb,IAAgBa,GAElBoB,EAAepE,iBAAiB,SAASM,UACvC6B,EAAca,QACRzC,EAAiBU,EAAA,IAEzBuC,EAAoBjE,YAAY6E,EAClC,CACF,CACA,MAAMC,EAAajC,EAAuB,IAAKD,IAAgBa,GAAY,GAC3EqB,EAAWrE,iBAAiB,SAASM,UACnC6B,UACM5B,EAAiBU,EAAA,IAEzBoD,EAAWzG,UAAUG,IAAI,2BACzByF,EAAoBjE,YAAY8E,EAClC,CArFIC,CAAiBtB,EAAY/B,GAC7BnD,GAGF,CAFE,MAAOmE,GACPC,QAAQqC,IAAI,QAAStC,EACvB,CACF,CAiFA,SAASd,EAAeqD,GACtBrC,EAAcqC,CAChB,EHvHAlE,iBACEC,EAAiB,0EAA0BvC,EAAAwC,UAC7C,CAEAiE,GIRAhG,EAAAR,EAAA,SAsBA,SAASyG,EAA6BC,GACpC,MAAMC,EAAkBC,aAAaC,QAAQH,GAE7C,OADkBI,KAAKC,MAAMJ,EAE/B,CA0BA,SAASK,EAAsBnG,EAAO6F,EAAKO,IAxB3C,SAAiCpG,EAAO6F,EAAKO,GAC3C,MAAMC,EAAkBT,EAA6BC,IAAQ,GAG7D,IAA2B,IAFAQ,EAAgBC,WAAUC,GAAQA,EAAKhC,KAAOvE,EAAMuE,KAEhD,CAC7B8B,EAAgBG,KAAKxG,GACrB,MAAM8F,EAAkBG,KAAKQ,UAAUJ,GACvCN,aAAaW,QAAQb,EAAKC,GAC1B1C,QAAQqC,IAAI,wCAGZ,MAAMkB,EAAiBf,EAA6BQ,GACpD,GAAIO,EAAgB,CAClB,MAAMC,EAAkBD,EAAeL,WAAUC,GAAQA,EAAKhC,KAAOvE,EAAMuE,KAC3E,IAAwB,IAApBqC,EAAwB,CAC1BD,EAAeE,OAAOD,EAAiB,GACvC,MAAME,EAAuBb,KAAKQ,UAAUE,GAC5CZ,aAAaW,QAAQN,EAAUU,GAC/B1D,QAAQqC,IAAI,wCACd,CACF,CACF,CACF,CAGEsB,CAAwB/G,EAAO6F,EAAKO,EACtC,CAEA,SAASY,EAAiCnB,GACxC,MAAMoB,EAAYrB,EAA6BC,GAE3CoB,EACFA,EAAUlH,SAAQC,IAChBoD,QAAQqC,IAAIzF,EAAMkH,MAAK,IAGzB9D,QAAQqC,IAAI,yBAEhB,CA/DuB7G,SAASS,cAAc,gBAC/B6B,iBAAiB,SAASiG,IACvC,MAAMC,EAAiBD,EAAGE,OAE1B,GAAID,EAAetI,UAAUwI,SAAS,0BAA2B,CAC/D,MAAMtH,EAAQiG,KAAKC,MAAMkB,EAAeG,QAAQvH,OAChDoD,QAAQqC,IAAIzF,GACZmG,EAAsBnG,EAAO,YAAa,eAC1CgH,EAAiC,aACjCtH,EAAAC,GAASC,OAAO4H,QAAQ,2BAC1B,MAAO,GAAIJ,EAAetI,UAAUwI,SAAS,4BAA6B,CACxE,MAAMtH,EAAQiG,KAAKC,MAAMkB,EAAeG,QAAQvH,OAChDoD,QAAQqC,IAAIzF,GACZmG,EAAsBnG,EAAO,cAAe,aAC5CgH,EAAiC,eACjCtH,EAAAC,GAASC,OAAO4H,QAAQ,6BAC1B,K,sBCnBgB5I,SAASC,eAAe,aAChCqC,iBAAiB,SAAS,WAClC0C,OAAOC,SAAS,CACdC,IAAK,EACLE,SAAU,UAEd,I","sources":["src/js/loader.js","src/js/movies.js","src/js/search-film.js","src/js/genres.js","src/js/pagination.js","src/js/local-storage.js","src/js/scroll.js"],"sourcesContent":["function showLoader() {\r\n  const loader = document.getElementById('pre-load');\r\n  loader.classList.remove('hidden');\r\n}\r\n\r\nfunction hideLoader() {\r\n  const loader = document.getElementById('pre-load');\r\n  loader.classList.add('hidden');\r\n}\r\n\r\nexport { showLoader, hideLoader };\r\n","import { API_KEY } from './api-key';\r\nimport { createPagination } from './pagination';\r\nconst trendingUrl = 'https://api.themoviedb.org/3/trending/movie/day?language=en-US';\r\n\r\nasync function trendingMovies() {\r\n  createPagination(`${trendingUrl}&api_key=${API_KEY}`);\r\n}\r\n\r\ntrendingMovies();\r\n\r\nexport { trendingMovies };\r\n","import { API_KEY } from './api-key';\r\nimport { createPagination, setCurrentPage } from './pagination';\r\nimport { getPosterLink } from './poster';\r\nimport { openModal } from './modal-movie';\r\nimport Notiflix from 'notiflix';\r\nimport { showLoader, hideLoader } from './loader';\r\n\r\nconst resultContainer = document.querySelector('.result__container');\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const form = document.querySelector('.header__form');\r\n  const input = document.querySelector('.form__input');\r\n\r\n  const searchButton = document.querySelector('.form__button');\r\n\r\n  form.addEventListener('submit', handleFormSubmit);\r\n  searchButton.addEventListener('click', handleFormSubmit);\r\n\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    const searchTerm = input.value.trim();\r\n    if (searchTerm !== '') {\r\n      showLoader();\r\n      searchMovies(searchTerm);\r\n    } else {\r\n      resultContainer.innerHTML = '';\r\n      setCurrentPage(1);\r\n      trendingMovies();\r\n    }\r\n  }\r\n});\r\n\r\nasync function searchMovies(searchTerm) {\r\n  const apiKey = API_KEY;\r\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${encodeURIComponent(\r\n    searchTerm,\r\n  )}`;\r\n  setCurrentPage(1);\r\n\r\n  //LINIJKA DO PREZENTACJI! sztuczne wymuszenie oczekiwania na wczytanie filmów, aby pokazać loader- zakomentuj, jeśli chcesz, aby kod działał normalnie\r\n  await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n  createPagination(url);\r\n  hideLoader();\r\n}\r\n\r\nfunction displayMovies(results) {\r\n  resultContainer.innerHTML = '';\r\n\r\n  if (results.length === 0) {\r\n    showErrorMessage();\r\n    trendingMovies();\r\n    return;\r\n  }\r\n\r\n  results.forEach(movie => {\r\n    const movieCard = createMovieCard(movie);\r\n    resultContainer.appendChild(movieCard);\r\n  });\r\n}\r\n\r\nfunction createMovieCard(movie) {\r\n  const movieCard = document.createElement('div');\r\n  movieCard.classList.add('movie__card');\r\n\r\n  const movieLink = document.createElement('a');\r\n  movieLink.href = '#';\r\n\r\n  const moviePoster = document.createElement('img');\r\n  moviePoster.classList.add('movie__poster');\r\n  moviePoster.src = `${getPosterLink(movie)}`;\r\n  movieLink.appendChild(moviePoster);\r\n\r\n  const movieShortDescr = document.createElement('ul');\r\n  movieShortDescr.classList.add('movie__short-descr');\r\n\r\n  const movieTitle = document.createElement('li');\r\n  movieTitle.classList.add('movie__title');\r\n  movieTitle.textContent = movie.original_title;\r\n  movieShortDescr.appendChild(movieTitle);\r\n\r\n  const movieGenre = document.createElement('li');\r\n  movieGenre.classList.add('movie__genre');\r\n  movieGenre.textContent = `${movie.genres} | ${movie.release_date.slice(0, 4)}`;\r\n  movieShortDescr.appendChild(movieGenre);\r\n\r\n  movieCard.appendChild(movieLink);\r\n  movieCard.appendChild(movieShortDescr);\r\n\r\n  moviePoster.addEventListener('click', e => {\r\n    e.preventDefault();\r\n    const backdrop = document.querySelector('.backdrop');\r\n    backdrop.classList.remove('is-hidden');\r\n    openModal(movie);\r\n  });\r\n\r\n  return movieCard;\r\n}\r\n\r\nfunction showErrorMessage() {\r\n  Notiflix.Notify.failure(\r\n    'Search result not successful. Enter the correct movie name and try again',\r\n  );\r\n}\r\n\r\nasync function trendingMovies() {\r\n  const apiKey = API_KEY;\r\n  const trendingUrl = `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=${apiKey}`;\r\n  createPagination(trendingUrl);\r\n}\r\n\r\ntrendingMovies();\r\n\r\nexport { displayMovies, trendingMovies };\r\n","import { API_KEY } from '../js/api-key';\r\n\r\nasync function getGenres(movieId) {\r\n  try {\r\n    const response = await fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\r\n    );\r\n    const movie = await response.json();\r\n    const genres = movie.genres.map(genre => genre.name).join(', ');\r\n    return genres;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return '';\r\n  }\r\n}\r\n\r\nexport { getGenres };\r\n","import { displayMovies } from './search-film';\r\nimport { getGenres } from './genres';\r\nimport { showLoader, hideLoader } from './loader';\r\n\r\nlet currentPage = 1;\r\nconst itemsPerPage = 20;\r\n\r\nfunction createPaginationButton(text, isDisabled, isCurrent) {\r\n  const button = document.createElement('button');\r\n  button.textContent = text;\r\n  button.disabled = isDisabled;\r\n  button.addEventListener('click', () => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\r\n  });\r\n  if (isCurrent) {\r\n    button.classList.add('pagination-button--current');\r\n  }\r\n  button.classList.add('pagination-button');\r\n  return button;\r\n}\r\n\r\nasync function createPagination(url) {\r\n  try {\r\n    showLoader();\r\n    const response = await fetch(`${url}&page=${currentPage}`);\r\n    const data = await response.json();\r\n    const totalPages = Math.ceil(data.total_pages / itemsPerPage);\r\n    const genrePromises = data.results.map(movie => getGenres(movie.id));\r\n    const genres = await Promise.all(genrePromises);\r\n\r\n    data.results.forEach((movie, index) => {\r\n      movie.genres = genres[index];\r\n    });\r\n\r\n    displayMovies(data.results);\r\n    renderPagination(totalPages, url);\r\n    hideLoader();\r\n  } catch (error) {\r\n    console.log('Error', error);\r\n  }\r\n}\r\n\r\nfunction renderPagination(totalPages, url) {\r\n  const paginationContainer = document.querySelector('.pagination-container');\r\n  paginationContainer.innerHTML = '';\r\n\r\n  const previousButton = createPaginationButton('◀', currentPage === 1, false);\r\n  previousButton.addEventListener('click', async () => {\r\n    currentPage--;\r\n    await createPagination(url);\r\n  });\r\n  previousButton.classList.add('pagination-button--previous');\r\n  paginationContainer.appendChild(previousButton);\r\n\r\n  if (totalPages <= 7) {\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      const pageButton = createPaginationButton(i.toString(), i === currentPage, i === currentPage);\r\n      pageButton.addEventListener('click', async () => {\r\n        currentPage = i;\r\n        await createPagination(url);\r\n      });\r\n      paginationContainer.appendChild(pageButton);\r\n    }\r\n  } else {\r\n    if (window.screen.width >= 768) {\r\n      const firstPageButton = createPaginationButton('1', currentPage === 1, currentPage === 1);\r\n      firstPageButton.addEventListener('click', async () => {\r\n        currentPage = 1;\r\n        await createPagination(url);\r\n      });\r\n      paginationContainer.appendChild(firstPageButton);\r\n    }\r\n    let startPage = Math.max(2, currentPage - 2);\r\n    let endPage = Math.min(totalPages - 1, currentPage + 2);\r\n    if (window.screen.width < 768) {\r\n      startPage = Math.max(1, currentPage - 2);\r\n      endPage = Math.min(totalPages, currentPage + 2);\r\n    }\r\n    if (currentPage <= 3) {\r\n      endPage = 5;\r\n    } else if (currentPage >= totalPages - 2) {\r\n      startPage = totalPages - 4;\r\n    }\r\n\r\n    if (window.screen.width >= 768 && startPage > 2) {\r\n      paginationContainer.appendChild(createPaginationButton('...', true));\r\n    }\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      const pageButton = createPaginationButton(i.toString(), i === currentPage, i === currentPage);\r\n      pageButton.addEventListener('click', async () => {\r\n        currentPage = i;\r\n        await createPagination(url);\r\n      });\r\n      paginationContainer.appendChild(pageButton);\r\n    }\r\n    if (window.screen.width >= 768) {\r\n      if (endPage < totalPages - 1) {\r\n        paginationContainer.appendChild(createPaginationButton('...', true));\r\n      }\r\n\r\n      const lastPageButton = createPaginationButton(\r\n        totalPages.toString(),\r\n        currentPage === totalPages,\r\n        currentPage === totalPages,\r\n      );\r\n      lastPageButton.addEventListener('click', async () => {\r\n        currentPage = totalPages;\r\n        await createPagination(url);\r\n      });\r\n      paginationContainer.appendChild(lastPageButton);\r\n    }\r\n  }\r\n  const nextButton = createPaginationButton('▶', currentPage === totalPages, false);\r\n  nextButton.addEventListener('click', async () => {\r\n    currentPage++;\r\n    await createPagination(url);\r\n  });\r\n  nextButton.classList.add('pagination-button--next');\r\n  paginationContainer.appendChild(nextButton);\r\n}\r\nfunction setCurrentPage(page) {\r\n  currentPage = page;\r\n}\r\n\r\nexport { createPagination, setCurrentPage };\r\n","import Notiflix from 'notiflix';\n\n// localStorage.clear()\nconst modalContainer = document.querySelector('.modal-movie');\nmodalContainer.addEventListener('click', ev => {\n  const clickedElement = ev.target;\n\n  if (clickedElement.classList.contains('modal-movie__btn-queue')) {\n    const movie = JSON.parse(clickedElement.dataset.movie);\n    console.log(movie);\n    handleSaveButtonClick(movie, 'queueList', 'watchedList');\n    displayMovieListFromLocalStorage('queueList');\n    Notiflix.Notify.success('Success! Added to queue.');\n  } else if (clickedElement.classList.contains('modal-movie__btn-watched')) {\n    const movie = JSON.parse(clickedElement.dataset.movie);\n    console.log(movie);\n    handleSaveButtonClick(movie, 'watchedList', 'queueList');\n    displayMovieListFromLocalStorage('watchedList');\n    Notiflix.Notify.success('Success! Added to watched.');\n  }\n});\n\nfunction getMovieListFromLocalStorage(key) {\n  const movieListString = localStorage.getItem(key);\n  const movieList = JSON.parse(movieListString);\n  return movieList;\n}\n\nfunction saveMovieToLocalStorage(movie, key, otherKey) {\n  const storedMovieList = getMovieListFromLocalStorage(key) || [];\n  const existingMovieIndex = storedMovieList.findIndex(item => item.id === movie.id);\n\n  if (existingMovieIndex === -1) {\n    storedMovieList.push(movie);\n    const movieListString = JSON.stringify(storedMovieList);\n    localStorage.setItem(key, movieListString);\n    console.log('Film został zapisany w localStorage.');\n\n    // Usunięcie filmu z drugiej listy, jeśli istnieje/ Delete a movie from the other list if movie exists there\n    const otherMovieList = getMovieListFromLocalStorage(otherKey);\n    if (otherMovieList) {\n      const otherMovieIndex = otherMovieList.findIndex(item => item.id === movie.id);\n      if (otherMovieIndex !== -1) {\n        otherMovieList.splice(otherMovieIndex, 1);\n        const otherMovieListString = JSON.stringify(otherMovieList);\n        localStorage.setItem(otherKey, otherMovieListString);\n        console.log('Film został usunięty z drugiej listy.');\n      }\n    }\n  }\n}\n\nfunction handleSaveButtonClick(movie, key, otherKey) {\n  saveMovieToLocalStorage(movie, key, otherKey);\n}\n\nfunction displayMovieListFromLocalStorage(key) {\n  const movieList = getMovieListFromLocalStorage(key);\n\n  if (movieList) {\n    movieList.forEach(movie => {\n      console.log(movie.title);\n    });\n  } else {\n    console.log('Brak filmów na liście.');\n  }\n}\n","const scrollBtn = document.getElementById('scrollBtn');\r\nscrollBtn.addEventListener('click', function () {\r\n  window.scrollTo({\r\n    top: 0,\r\n    behavior: 'smooth',\r\n  });\r\n});\r\n"],"names":["$b6e5d84fbce03de8$export$56525cbb1fcd885c","document","getElementById","classList","remove","$b6e5d84fbce03de8$export$5cee2c2772922923","add","$ecLez","parcelRequire","$409b227334d5b635$var$resultContainer","querySelector","$409b227334d5b635$export$80c33a899040816b","results","innerHTML","length","$parcel$interopDefault","$7IoHk","Notify","failure","$409b227334d5b635$export$a14859daa7784cb7","forEach","movie","movieCard","createElement","movieLink","href","moviePoster","src","$hHCHd","getPosterLink","appendChild","movieShortDescr","movieTitle","textContent","original_title","movieGenre","genres","release_date","slice","addEventListener","e","preventDefault","$etrig","openModal","$409b227334d5b635$var$createMovieCard","async","$baa48fd5a30d32e8$export$7f3155e3cda021fd","API_KEY","form","input","searchButton","handleFormSubmit","event","searchTerm","value","trim","url","encodeURIComponent","$baa48fd5a30d32e8$export$5e52cab53995b7b9","Promise","resolve","setTimeout","$409b227334d5b635$var$searchMovies","$bc36aade2b53bb55$export$c5604fa8028da00","movieId","response","fetch","json","map","genre","name","join","error","console","$baa48fd5a30d32e8$var$currentPage","$baa48fd5a30d32e8$var$createPaginationButton","text","isDisabled","isCurrent","button","disabled","window","scrollTo","top","left","behavior","data","totalPages","Math","ceil","total_pages","genrePromises","id","all","index","paginationContainer","previousButton","i","pageButton","toString","screen","width","firstPageButton","startPage","max","endPage","min","lastPageButton","nextButton","$baa48fd5a30d32e8$var$renderPagination","log","page","$a1f1a4b90320e243$export$a14859daa7784cb7","$80b576907cf5d791$var$getMovieListFromLocalStorage","key","movieListString","localStorage","getItem","JSON","parse","$80b576907cf5d791$var$handleSaveButtonClick","otherKey","storedMovieList","findIndex","item","push","stringify","setItem","otherMovieList","otherMovieIndex","splice","otherMovieListString","$80b576907cf5d791$var$saveMovieToLocalStorage","$80b576907cf5d791$var$displayMovieListFromLocalStorage","movieList","title","ev","clickedElement","target","contains","dataset","success"],"version":3,"file":"index.e7be9f07.js.map"}