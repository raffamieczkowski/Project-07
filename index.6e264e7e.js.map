{"mappings":"AAqEA,SAASA,EAAUC,IArEnB,SAAqBA,GACnB,MAAMC,EAAeC,SAASC,cAAc,gBACtCC,EAAWF,SAASC,cAAc,aAElCE,EAAS,+HAGTL,EAAMM,qBACEN,EAAMO,iLAMiBP,EAAMQ,oPAKDR,EAAMS,aAAaC,QACnD,kCAC+BV,EAAMW,0NAGsDX,EAAMY,WAAWF,QAC9G,gNAIAV,EAAMO,2WAOuBP,EAAMa,yMAKYb,EAAMc,yDAuB7D,SAASC,IACPX,EAASY,UAAUC,IAAI,YACzB,CArBAhB,EAAaiB,UAAYb,EAEHJ,EAAaE,cAAc,2BACnCgB,iBAAiB,SAAS,KACtCJ,GAAA,IAGFX,EAASe,iBAAiB,SAASC,IAC7BA,EAAMC,SAAWjB,GACnBW,GAAA,IAIJb,SAASiB,iBAAiB,WAAWC,IACjB,WAAdA,EAAME,KACRP,GAAA,GAON,CAGgBQ,CAAYvB,EAC5B,CCvEO,MAAMwB,EAAU,mCCMjBC,EAAkBvB,SAASC,cAAc,sBAiC/C,SAASuB,EAAcC,GACrBF,EAAgBP,UAAY,GAE5BS,EAAQC,SAAQ5B,IACd,MAAM6B,EAKV,SAAyB7B,GACvB,MAAM6B,EAAY3B,SAAS4B,cAAc,OACzCD,EAAUb,UAAUC,IAAI,eAExB,MAAMc,EAAY7B,SAAS4B,cAAc,KACzCC,EAAUC,KAAO,IAEjB,MAAMC,EAAc/B,SAAS4B,cAAc,OAC3CG,EAAYjB,UAAUC,IAAI,iBAC1BgB,EAAYC,IAAM,sCAAsClC,EAAMM,cAC9DyB,EAAUI,YAAYF,GAEtB,MAAMG,EAAkBlC,SAAS4B,cAAc,MAC/CM,EAAgBpB,UAAUC,IAAI,sBAE9B,MAAMoB,EAAanC,SAAS4B,cAAc,MAC1CO,EAAWrB,UAAUC,IAAI,gBACzBoB,EAAWC,YAActC,EAAMO,eAC/B6B,EAAgBD,YAAYE,GAE5B,MAAME,EAAarC,SAAS4B,cAAc,MAe1C,OAdAS,EAAWvB,UAAUC,IAAI,gBACzBsB,EAAWD,YAAc,GAAGtC,EAAMwC,YAAYxC,EAAMyC,aAAaC,MAAM,EAAG,KAC1EN,EAAgBD,YAAYI,GAE5BV,EAAUM,YAAYJ,GACtBF,EAAUM,YAAYC,GAEtBH,EAAYd,iBAAiB,SAASwB,IACpCA,EAAEC,iBACe1C,SAASC,cAAc,aAC/Ba,UAAU6B,OAAO,aAC1B9C,EAAUC,EAAA,IAGL6B,CACT,CAzCsBiB,CAAgB9C,GAClCyB,EAAgBU,YAAYN,EAAA,GAEhC,CC5CAkB,eAAeC,EAAUC,GACvB,IACE,MAAMC,QAAiBC,MAAM,sCAAsCF,aAAmBzB,oBAChFxB,QAAckD,EAASE,OAE7B,OADepD,EAAMwC,OAAOa,KAAIC,GAASA,EAAMC,OAAMC,KAAK,KAK5D,CAHE,MAAOC,GAEP,OADAC,QAAQD,MAAMA,GACP,EACT,CACF,CDLAvD,SAASiB,iBAAiB,oBAAoB,KAC5C,MAAMwC,EAAOzD,SAASC,cAAc,iBAC9ByD,EAAQ1D,SAASC,cAAc,gBAE/B0D,EAAe3D,SAASC,cAAc,iBAK5C,SAAS2D,EAAiB1C,GACxBA,EAAMwB,iBACN,MAAMmB,EAAaH,EAAMI,MAAMC,OACZ,KAAfF,EASRhB,eAA4BgB,GAC1B,MACMG,EAAM,qDADG1C,WACkE2C,mBAC/EJ,KAGD,WACCK,EAAiBF,EACnB,EAFC,EAGH,CAjBMG,CAAaN,IAEbtC,EAAgBP,UAAY,GAC5BoD,IAEJ,CAZAX,EAAKxC,iBAAiB,SAAU2C,GAChCD,EAAa1C,iBAAiB,QAAS2C,EAWvC,IEtBF,IAAIS,EAAc,EAGlB,SAASC,EAAuBC,EAAMC,EAAYC,GAChD,MAAMC,EAAS1E,SAAS4B,cAAc,UAOtC,OANA8C,EAAOtC,YAAcmC,EACrBG,EAAOC,SAAWH,EACdC,GACFC,EAAO5D,UAAUC,IAAI,8BAEvB2D,EAAO5D,UAAUC,IAAI,qBACd2D,CACT,CAEA7B,eAAeqB,EAAiBF,GAC9B,IACE,MAAMhB,QAAiBC,MAAM,GAAGe,UAAYK,KAEtCO,QAAa5B,EAASE,OACtB2B,EAAaC,KAAKC,KAAKH,EAAKI,YAlBjB,IAmBXC,EAAgBL,EAAKnD,QAAQ0B,KAAIrD,GAASgD,EAAUhD,EAAMc,MAC1D0B,QAAe4C,QAAQC,IAAIF,GAEjCL,EAAKnD,QAAQC,SAAQ,CAAC5B,EAAOsF,KAC3BtF,EAAMwC,OAASA,EAAO8C,EAAM,IAG9B5D,EAAcoD,EAAKnD,SAOvB,SAA0BoD,EAAYb,GACpC,MAAMqB,EAAsBrF,SAASC,cAAc,yBACnDoF,EAAoBrE,UAAY,GAEhC,MAAMsE,EAAiBhB,EAAuB,IAAqB,IAAhBD,GAAmB,GAQtE,GAPAiB,EAAerE,iBAAiB,SAAS4B,UACvCwB,UACMH,EAAiBF,EAAA,IAEzBsB,EAAexE,UAAUC,IAAI,+BAC7BsE,EAAoBpD,YAAYqD,GAE5BT,GAAc,EAChB,IAAK,IAAIU,EAAI,EAAGA,GAAKV,EAAYU,IAAK,CACpC,MAAMC,EAAalB,EAAuBiB,EAAEE,WAAYF,IAAMlB,EAAakB,IAAMlB,GACjFmB,EAAWvE,iBAAiB,SAAS4B,UACnCwB,EAAckB,QACRrB,EAAiBF,EAAA,IAEzBqB,EAAoBpD,YAAYuD,EAClC,KACK,CACL,MAAME,EAAkBpB,EAAuB,IAAqB,IAAhBD,EAAmC,IAAhBA,GACvEqB,EAAgBzE,iBAAiB,SAAS4B,UACxCwB,EAAc,QACRH,EAAiBF,EAAA,IAEzBqB,EAAoBpD,YAAYyD,GAEhC,IAAIC,EAAYb,KAAKc,IAAI,EAAGvB,EAAc,GACtCwB,EAAUf,KAAKgB,IAAIjB,EAAa,EAAGR,EAAc,GAEjDA,GAAe,EACjBwB,EAAU,EACDxB,GAAeQ,EAAa,IACrCc,EAAYd,EAAa,GAGvBc,EAAY,GACdN,EAAoBpD,YAAYqC,EAAuB,OAAO,IAGhE,IAAK,IAAIiB,EAAII,EAAWJ,GAAKM,EAASN,IAAK,CACzC,MAAMC,EAAalB,EAAuBiB,EAAEE,WAAYF,IAAMlB,EAAakB,IAAMlB,GACjFmB,EAAWvE,iBAAiB,SAAS4B,UACnCwB,EAAckB,QACRrB,EAAiBF,EAAA,IAEzBqB,EAAoBpD,YAAYuD,EAClC,CAEIK,EAAUhB,EAAa,GACzBQ,EAAoBpD,YAAYqC,EAAuB,OAAO,IAGhE,MAAMyB,EAAiBzB,EACrBO,EAAWY,WACXpB,IAAgBQ,EAChBR,IAAgBQ,GAElBkB,EAAe9E,iBAAiB,SAAS4B,UACvCwB,EAAcQ,QACRX,EAAiBF,EAAA,IAEzBqB,EAAoBpD,YAAY8D,EAClC,CAEA,MAAMC,EAAa1B,EAAuB,IAAKD,IAAgBQ,GAAY,GAC3EmB,EAAW/E,iBAAiB,SAAS4B,UACnCwB,UACMH,EAAiBF,EAAA,IAEzBgC,EAAWlF,UAAUC,IAAI,2BACzBsE,EAAoBpD,YAAY+D,EAClC,CAhFIC,CAAiBpB,EAAYb,EAG/B,CAFE,MAAOT,GACPC,QAAQ0C,IAAI,QAAS3C,EACvB,CACF,CC/BAV,eAAeuB,IACbF,EAAiB,0EAA0B5C,IAC7C,CAEA8C,ICWA,MAAM+B,EAAa,IAlBnB,MAEIC,YACI,IAAIC,EAMJ,OAJKA,EADiC,OAAlCC,aAAaC,QAAQ,UACX,GAEDC,KAAKC,MAAOH,aAAaC,QAAS,WAExCF,CACX,CAEAK,WAAY5G,GACR,MAAMuG,EAASM,KAAKP,YACpBC,EAAOO,KAAK9G,GACZwG,aAAaO,QAAQ,SAAUL,KAAKM,UAAUT,GAClD,GAIJrG,SAASiB,iBAAiB,SAAUwB,IAChC,GAAGA,EAAEtB,OAAOL,UAAUiG,SAAS,0BAA0B,CACrD,MAAMC,EAAWvE,EAAEtB,OAAO8F,aACpBC,EAAY,CACdtG,GAAI6B,EAAEtB,OAAOgG,QAAQvG,GACrByC,KAAM2D,EAAS/G,cAAc,uBAAuBmC,YACpDgF,OAAQJ,EAAS/G,cAAc,wBAAwB+B,KAG3DmE,EAAWO,WAAWQ,EAC5B,KAEFZ,aAAae,QCjCb,MAAMC,EAAWtH,SAASC,cAAc,mBAClCsH,EAAOvH,SAASwH,KAEIlB,aAAaC,QAAQ,oBAE7CgB,EAAKzG,UAAUC,IAAI,aAGrBuG,EAASrG,iBAAiB,SAASwB,IACjCA,EAAEC,iBACF6E,EAAKzG,UAAU2G,OAAO,aAEtB,MAAMC,EAAaH,EAAKzG,UAAUiG,SAAS,aAC3CT,aAAaO,QAAQ,kBAAmBa,EAAA,ICb1C,MAAMC,EAAQ3H,SAASC,cAAc,YAC/B2H,EAAe5H,SAASC,cAAc,mBAO5CD,SAASiB,iBAAiB,oBAAoB,WACvC4G,eAAetB,QAAQ,mBAK1BoB,EAAMG,MAAMC,QAAU,OAJtBC,YAAW,KACTL,EAAMG,MAAMC,QAAU,UACrB,IAIP,IAEAH,EAAa3G,iBAAiB,SAf9B,WACE0G,EAAMG,MAAMC,QAAU,OACtBF,eAAehB,QAAQ,mBAAmB,EAC5C","sources":["src/js/modal-movie.js","src/js/api-key.js","src/js/search-film.js","src/js/genres.js","src/js/pagination.js","src/js/movies.js","src/js/queue.js","src/js/dark-mode.js","src/js/cookies.js"],"sourcesContent":["function createModal(movie) {\r\n  const modalMovieEl = document.querySelector('.modal-movie');\r\n  const backdrop = document.querySelector('.backdrop');\r\n\r\n  const markup = `\r\n    <div class=\"modal-movie__poster-box\">\r\n      <img class=\"modal-movie__poster\" src=\"https://image.tmdb.org/t/p/original${\r\n        movie.poster_path\r\n      }\" alt=\"${movie.original_title}\" />\r\n    </div>\r\n    <button class=\"modal-movie__btn-close\">&times\r\n    </button>\r\n\r\n    <div class=\"modal-movie__info\">\r\n      <h2 class=\"modal-movie__title\">${movie.title}</h2>\r\n\r\n      <ul class=\"modal-movie__list\">\r\n        <li class=\"modal-movie__item modal-movie__item--label\">vote / votes</li>\r\n        <li class=\"modal-movie__item modal-movie__item--value\">\r\n          <span class=\"modal-movie__vote\">${movie.vote_average.toFixed(\r\n            1,\r\n          )}</span> <span>/ </span><span>${movie.vote_count}</span>\r\n        </li>\r\n        <li class=\"modal-movie__item modal-movie__item--label\">popularity</li>\r\n        <li class=\"modal-movie__item modal-movie__item--value\"><span class=\"modal-movie__popularity\">${movie.popularity.toFixed(\r\n          1,\r\n        )}</span></li>\r\n        <li class=\"modal-movie__item modal-movie__item--label\">original title</li>\r\n        <li class=\"modal-movie__item modal-movie__item--value\"><span class=\"modal-movie__original-title\">${\r\n          movie.original_title\r\n        }</span></li>\r\n        <li class=\"modal-movie__item modal-movie__item--label\">genre</li>\r\n        <li class=\"modal-movie__item modal-movie__item--value\"><span class=\"modal-movie__genre\"></span></li>\r\n      </ul>\r\n      <div class=\"modal-movie__description\">\r\n        <h3 class=\"modal-movie__about\">about</h3>\r\n        <p class=\"modal-movie__text\">${movie.overview}</p>\r\n      </div>\r\n\r\n      <div class=\"modal-movie__btns\">\r\n        <button class=\"modal-movie__btn-watched\">add to watched</button>\r\n        <button class=\"modal-movie__btn-queue\" data-id=${movie.id}>add to queue</button>\r\n      </div>\r\n    </div>\r\n  `;\r\n  modalMovieEl.innerHTML = markup;\r\n\r\n  const closeModalBtn = modalMovieEl.querySelector('.modal-movie__btn-close');\r\n  closeModalBtn.addEventListener('click', () => {\r\n    closeBackdrop();\r\n  });\r\n\r\n  backdrop.addEventListener('click', event => {\r\n    if (event.target === backdrop) {\r\n      closeBackdrop();\r\n    }\r\n  });\r\n\r\n  document.addEventListener('keydown', event => {\r\n    if (event.key === 'Escape') {\r\n      closeBackdrop();\r\n    }\r\n  });\r\n\r\n  function closeBackdrop() {\r\n    backdrop.classList.add('is-hidden');\r\n  }\r\n}\r\n\r\nfunction openModal(movie) {\r\n  const modal = createModal(movie);\r\n}\r\n\r\nexport { openModal };\r\n","export const API_KEY = '4c48f56c563cad897bb4af72634cd546';\n","import { API_KEY } from './api-key';\r\nimport { createPagination } from './pagination';\r\nimport { trendingMovies } from './movies';\r\n\r\nimport { openModal } from './modal-movie';\r\n\r\nconst resultContainer = document.querySelector('.result__container');\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const form = document.querySelector('.header__form');\r\n  const input = document.querySelector('.form__input');\r\n\r\n  const searchButton = document.querySelector('.form__button');\r\n\r\n  form.addEventListener('submit', handleFormSubmit);\r\n  searchButton.addEventListener('click', handleFormSubmit);\r\n\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    const searchTerm = input.value.trim();\r\n    if (searchTerm !== '') {\r\n      searchMovies(searchTerm);\r\n    } else {\r\n      resultContainer.innerHTML = '';\r\n      trendingMovies();\r\n    }\r\n  }\r\n});\r\n\r\nasync function searchMovies(searchTerm) {\r\n  const apiKey = API_KEY;\r\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${encodeURIComponent(\r\n    searchTerm,\r\n  )}`;\r\n\r\n  (async () => {\r\n    createPagination(url);\r\n  })();\r\n}\r\n\r\nfunction displayMovies(results) {\r\n  resultContainer.innerHTML = '';\r\n\r\n  results.forEach(movie => {\r\n    const movieCard = createMovieCard(movie);\r\n    resultContainer.appendChild(movieCard);\r\n  });\r\n}\r\n\r\nfunction createMovieCard(movie) {\r\n  const movieCard = document.createElement('div');\r\n  movieCard.classList.add('movie__card');\r\n\r\n  const movieLink = document.createElement('a');\r\n  movieLink.href = '#';\r\n\r\n  const moviePoster = document.createElement('img');\r\n  moviePoster.classList.add('movie__poster');\r\n  moviePoster.src = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\r\n  movieLink.appendChild(moviePoster);\r\n\r\n  const movieShortDescr = document.createElement('ul');\r\n  movieShortDescr.classList.add('movie__short-descr');\r\n\r\n  const movieTitle = document.createElement('li');\r\n  movieTitle.classList.add('movie__title');\r\n  movieTitle.textContent = movie.original_title;\r\n  movieShortDescr.appendChild(movieTitle);\r\n\r\n  const movieGenre = document.createElement('li');\r\n  movieGenre.classList.add('movie__genre');\r\n  movieGenre.textContent = `${movie.genres} | ${movie.release_date.slice(0, 4)}`;\r\n  movieShortDescr.appendChild(movieGenre);\r\n\r\n  movieCard.appendChild(movieLink);\r\n  movieCard.appendChild(movieShortDescr);\r\n\r\n  moviePoster.addEventListener('click', e => {\r\n    e.preventDefault();\r\n    const backdrop = document.querySelector('.backdrop');\r\n    backdrop.classList.remove('is-hidden');\r\n    openModal(movie);\r\n  });\r\n\r\n  return movieCard;\r\n}\r\n\r\nexport { displayMovies };\r\n","import { API_KEY } from '../js/api-key';\r\n\r\nasync function getGenres(movieId) {\r\n  try {\r\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\r\n    const movie = await response.json();\r\n    const genres = movie.genres.map(genre => genre.name).join(', ');\r\n    return genres;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return '';\r\n  }\r\n}\r\n\r\nexport { getGenres };","import { displayMovies } from './search-film';\r\nimport { getGenres } from './genres';\r\n\r\nlet currentPage = 1;\r\nconst itemsPerPage = 20;\r\n\r\nfunction createPaginationButton(text, isDisabled, isCurrent) {\r\n  const button = document.createElement('button');\r\n  button.textContent = text;\r\n  button.disabled = isDisabled;\r\n  if (isCurrent) {\r\n    button.classList.add('pagination-button--current');\r\n  }\r\n  button.classList.add('pagination-button');\r\n  return button;\r\n}\r\n\r\nasync function createPagination(url) {\r\n  try {\r\n    const response = await fetch(`${url}&page=${currentPage}`);\r\n    // console.log(response);\r\n    const data = await response.json();\r\n    const totalPages = Math.ceil(data.total_pages / itemsPerPage);\r\n    const genrePromises = data.results.map(movie => getGenres(movie.id));\r\n    const genres = await Promise.all(genrePromises);\r\n\r\n    data.results.forEach((movie, index) => {\r\n      movie.genres = genres[index];\r\n    });\r\n\r\n    displayMovies(data.results);\r\n    renderPagination(totalPages, url);\r\n  } catch (error) {\r\n    console.log('Error', error);\r\n  }\r\n}\r\n\r\nfunction renderPagination(totalPages, url) {\r\n  const paginationContainer = document.querySelector('.pagination-container');\r\n  paginationContainer.innerHTML = '';\r\n\r\n  const previousButton = createPaginationButton('<', currentPage === 1, false);\r\n  previousButton.addEventListener('click', async () => {\r\n    currentPage--;\r\n    await createPagination(url);\r\n  });\r\n  previousButton.classList.add('pagination-button--previous');\r\n  paginationContainer.appendChild(previousButton);\r\n\r\n  if (totalPages <= 7) {\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      const pageButton = createPaginationButton(i.toString(), i === currentPage, i === currentPage);\r\n      pageButton.addEventListener('click', async () => {\r\n        currentPage = i;\r\n        await createPagination(url);\r\n      });\r\n      paginationContainer.appendChild(pageButton);\r\n    }\r\n  } else {\r\n    const firstPageButton = createPaginationButton('1', currentPage === 1, currentPage === 1);\r\n    firstPageButton.addEventListener('click', async () => {\r\n      currentPage = 1;\r\n      await createPagination(url);\r\n    });\r\n    paginationContainer.appendChild(firstPageButton);\r\n\r\n    let startPage = Math.max(2, currentPage - 2);\r\n    let endPage = Math.min(totalPages - 1, currentPage + 2);\r\n\r\n    if (currentPage <= 3) {\r\n      endPage = 5;\r\n    } else if (currentPage >= totalPages - 2) {\r\n      startPage = totalPages - 4;\r\n    }\r\n\r\n    if (startPage > 2) {\r\n      paginationContainer.appendChild(createPaginationButton('...', false));\r\n    }\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      const pageButton = createPaginationButton(i.toString(), i === currentPage, i === currentPage);\r\n      pageButton.addEventListener('click', async () => {\r\n        currentPage = i;\r\n        await createPagination(url);\r\n      });\r\n      paginationContainer.appendChild(pageButton);\r\n    }\r\n\r\n    if (endPage < totalPages - 1) {\r\n      paginationContainer.appendChild(createPaginationButton('...', false));\r\n    }\r\n\r\n    const lastPageButton = createPaginationButton(\r\n      totalPages.toString(),\r\n      currentPage === totalPages,\r\n      currentPage === totalPages,\r\n    );\r\n    lastPageButton.addEventListener('click', async () => {\r\n      currentPage = totalPages;\r\n      await createPagination(url);\r\n    });\r\n    paginationContainer.appendChild(lastPageButton);\r\n  }\r\n\r\n  const nextButton = createPaginationButton('>', currentPage === totalPages, false);\r\n  nextButton.addEventListener('click', async () => {\r\n    currentPage++;\r\n    await createPagination(url);\r\n  });\r\n  nextButton.classList.add('pagination-button--next');\r\n  paginationContainer.appendChild(nextButton);\r\n}\r\n\r\nexport { createPagination };\r\n","import { API_KEY } from './api-key';\r\nimport { createPagination } from './pagination';\r\nconst trendingUrl = 'https://api.themoviedb.org/3/trending/movie/day?language=en-US';\r\n\r\nasync function trendingMovies() {\r\n  createPagination(`${trendingUrl}&api_key=${API_KEY}`);\r\n}\r\n\r\ntrendingMovies();\r\n\r\nexport { trendingMovies };\r\n","\nclass QueueLS {\n    // check from localStorage\n    getFromLS(){\n        let movies;\n        if (localStorage.getItem('movies')=== null) {\n             movies = []\n        } else {\n            movies = JSON.parse (localStorage.getItem (\"movies\"))\n        }\n        return movies;\n    }\n    // save to localStorage\n    saveIntoLS (movie) {\n        const movies = this.getFromLS();\n        movies.push(movie);\n        localStorage.setItem(\"movies\", JSON.stringify(movies))\n    }\n}\nconst movieQueue = new QueueLS()\n\ndocument.addEventListener('click', (e)=>{\n    if(e.target.classList.contains('modal-movie__btn-queue')){\n        const cardBody = e.target.offsetParent\n        const movieInfo = {\n            id: e.target.dataset.id,\n            name: cardBody.querySelector(\".modal-movie__title\").textContent,\n            poster: cardBody.querySelector(\".modal-movie__poster\").src\n        }\n        // console.log(movieInfo)\n        movieQueue.saveIntoLS(movieInfo)\n  }\n})\nlocalStorage.clear()\n\n","const darkMode = document.querySelector('.header__toggle');\r\nconst body = document.body;\r\n\r\nconst isDarkModeEnabled = localStorage.getItem('darkModeEnabled');\r\nif (isDarkModeEnabled) {\r\n  body.classList.add('dark-mode');\r\n}\r\n\r\ndarkMode.addEventListener('click', e => {\r\n  e.preventDefault();\r\n  body.classList.toggle('dark-mode');\r\n\r\n  const isDarkMode = body.classList.contains('dark-mode');\r\n  localStorage.setItem('darkModeEnabled', isDarkMode);\r\n});\r\n","const popup = document.querySelector('.cookies');\r\nconst acceptButton = document.querySelector('#accept-cookies');\r\n\r\nfunction acceptCookies() {\r\n  popup.style.display = 'none';\r\n  sessionStorage.setItem('cookiesAccepted', true);\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  if (!sessionStorage.getItem('cookiesAccepted')) {\r\n    setTimeout(() => {\r\n      popup.style.display = 'block';\r\n    }, 3000);\r\n  } else {\r\n    popup.style.display = 'none';\r\n  }\r\n});\r\n\r\nacceptButton.addEventListener('click', acceptCookies);\r\n"],"names":["$a898f20bd771b561$export$a7f6cffb6b8ba11c","movie","modalMovieEl","document","querySelector","backdrop","markup","poster_path","original_title","title","vote_average","toFixed","vote_count","popularity","overview","id","closeBackdrop","classList","add","innerHTML","addEventListener","event","target","key","$a898f20bd771b561$var$createModal","$a576d362b369eae0$export$a9861bd62f48e142","$409b227334d5b635$var$resultContainer","$409b227334d5b635$export$80c33a899040816b","results","forEach","movieCard","createElement","movieLink","href","moviePoster","src","appendChild","movieShortDescr","movieTitle","textContent","movieGenre","genres","release_date","slice","e","preventDefault","remove","$409b227334d5b635$var$createMovieCard","async","$bc36aade2b53bb55$export$c5604fa8028da00","movieId","response","fetch","json","map","genre","name","join","error","console","form","input","searchButton","handleFormSubmit","searchTerm","value","trim","url","encodeURIComponent","$baa48fd5a30d32e8$export$7f3155e3cda021fd","$409b227334d5b635$var$searchMovies","$a1f1a4b90320e243$export$a14859daa7784cb7","$baa48fd5a30d32e8$var$currentPage","$baa48fd5a30d32e8$var$createPaginationButton","text","isDisabled","isCurrent","button","disabled","data","totalPages","Math","ceil","total_pages","genrePromises","Promise","all","index","paginationContainer","previousButton","i","pageButton","toString","firstPageButton","startPage","max","endPage","min","lastPageButton","nextButton","$baa48fd5a30d32e8$var$renderPagination","log","$97ba46b99cc2e381$var$movieQueue","getFromLS","movies","localStorage","getItem","JSON","parse","saveIntoLS","this","push","setItem","stringify","contains","cardBody","offsetParent","movieInfo","dataset","poster","clear","$d8a185999faf1447$var$darkMode","$d8a185999faf1447$var$body","body","toggle","isDarkMode","$e7f8bd170b42eaa0$var$popup","$e7f8bd170b42eaa0$var$acceptButton","sessionStorage","style","display","setTimeout"],"version":3,"file":"index.6e264e7e.js.map"}