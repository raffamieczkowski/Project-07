{"mappings":"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","sources":["src/js/modal-movie.js","src/js/api-key.js","src/js/genres.js","src/js/movies.js","src/js/search-film.js"],"sourcesContent":["const openModalBtn = document.querySelector('.movies-list');\r\nconst backdrop = document.querySelector('.backdrop');\r\nconst closeModalBtn = document.querySelector('.modal-movie__btn-close');\r\nopenModalBtn.addEventListener('click', () => {\r\n  backdrop.classList.remove('is-hidden');\r\n});\r\ncloseModalBtn.addEventListener('click', () => {\r\n  backdrop.classList.add('is-hidden');\r\n});","export const API_KEY = '4c48f56c563cad897bb4af72634cd546';\n","import { API_KEY } from '../js/api-key';\n\nasync function getGenres(movieId) {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    const movie = await response.json();\n    const genres = movie.genres.map(genre => genre.name).join(', ');\n    return genres;\n  } catch (error) {\n    console.error(error);\n    return '';\n  }\n}\n\nexport { getGenres };","import { API_KEY } from \"./api-key\";\nimport { getGenres } from \"./genres\";\nconst trendingUrl = 'https://api.themoviedb.org/3/trending/movie/day?language=en-US';\nconst moviesEL = document.querySelector('.movies-list');\n\nasync function fetchMovies() {\n  try {\n    const response = await fetch(`${trendingUrl}&api_key=${API_KEY}&page=1`);\n    const data = await response.json();\n\n    const movies = data.results;\n\n    const genrePromises = movies.map(movie => getGenres(movie.id));\n    const genres = await Promise.all(genrePromises);\n\n    const markup = movies.map((movie, index) => {\n      movie.genres = genres[index];\n      return `<div class=\"movie__card\">\n        <a href=\"#\"> <img class=\"movie__poster\" src=\"https://image.tmdb.org/t/p/original${\n          movie.poster_path\n        }\" /></a>\n        <ul class=\"movie__short-descr\">\n          <li class=\"movie__title\">${movie.original_title}</li>\n          <li class=\"movie__genre\">${movie.genres} | ${movie.release_date.slice(0, 4)}</li>\n        </ul>\n      </div>`;\n    }).join('');\n\n    moviesEL.insertAdjacentHTML('beforeend', markup);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfetchMovies();","import { API_KEY } from \"./api-key\";\nimport { getGenres } from \"./genres\";\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const form = document.querySelector('.header__form');\n  const input = document.querySelector('.form__input');\n  const resultContainer = document.querySelector('.result__container');\n  const searchButton = document.querySelector('.form__button');\n\n  form.addEventListener('submit', handleFormSubmit);\n  searchButton.addEventListener('click', handleFormSubmit);\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    const searchTerm = input.value.trim();\n    if (searchTerm !== '') {\n      searchMovies(searchTerm);\n    }\n  }\n\n  async function searchMovies(searchTerm) {\n    const apiKey = API_KEY;\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${encodeURIComponent(searchTerm)}`;\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      const movies = data.results;\n\n      const genrePromises = movies.map(movie => getGenres(movie.id));\n      const genres = await Promise.all(genrePromises);\n\n      movies.forEach((movie, index) => {\n        movie.genres = genres[index];\n      });\n\n      displayMovies(movies);\n    } catch (error) {\n      console.log('An error occurred:', error);\n    }\n  }\n\n  function displayMovies(results) {\n    resultContainer.innerHTML = '';\n\n    results.forEach(movie => {\n      const movieCard = createMovieCard(movie);\n      resultContainer.appendChild(movieCard);\n    });\n  }\n\n  function createMovieCard(movie) {\n    const movieCard = document.createElement('div');\n    movieCard.classList.add('movie__card');\n\n    const movieLink = document.createElement('a');\n    movieLink.href = '#';\n\n    const moviePoster = document.createElement('img');\n    moviePoster.classList.add('movie__poster');\n    moviePoster.src = `https://image.tmdb.org/t/p/original${movie.poster_path}`;\n    movieLink.appendChild(moviePoster);\n\n    const movieShortDescr = document.createElement('ul');\n    movieShortDescr.classList.add('movie__short-descr');\n\n    const movieTitle = document.createElement('li');\n    movieTitle.classList.add('movie__title');\n    movieTitle.textContent = movie.original_title;\n    movieShortDescr.appendChild(movieTitle);\n\n    const movieGenre = document.createElement('li');\n    movieGenre.classList.add('movie__genre');\n    movieGenre.textContent = `${movie.genres} | ${movie.release_date.slice(0, 4)}`;\n    movieShortDescr.appendChild(movieGenre);\n\n    movieCard.appendChild(movieLink);\n    movieCard.appendChild(movieShortDescr);\n\n    return movieCard;\n  }\n});"],"names":["$a898f20bd771b561$var$openModalBtn","document","querySelector","$a898f20bd771b561$var$backdrop","$a898f20bd771b561$var$closeModalBtn","addEventListener","classList","remove","add","$a576d362b369eae0$export$a9861bd62f48e142","async","$bc36aade2b53bb55$export$c5604fa8028da00","movieId","response","fetch","movie","json","genres","map","genre","name","join","error","console","$a1f1a4b90320e243$var$moviesEL","movies","results","genrePromises","id","Promise","all","markup","index","poster_path","original_title","release_date","slice","insertAdjacentHTML","$a1f1a4b90320e243$var$fetchMovies","form","input","resultContainer","searchButton","handleFormSubmit","event","preventDefault","searchTerm","value","trim","url","encodeURIComponent","forEach","innerHTML","movieCard","createElement","movieLink","href","moviePoster","src","appendChild","movieShortDescr","movieTitle","textContent","movieGenre","createMovieCard","log","searchMovies"],"version":3,"file":"index.f1f23c57.js.map"}